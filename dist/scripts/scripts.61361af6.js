"use strict";angular.module("translateApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","pascalprecht.translate","tmh.dynamicLocale"]).constant("DEBUG_MODE",!1).constant("VERSION_TAG",1424120233977).constant("LOCALES",{locales:{ru_RU:"Русский",en_US:"English"},preferredLocale:"en_US"}).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/contacts",{templateUrl:"views/contacts.html",controller:"ContactsCtrl"}).otherwise({redirectTo:"/"})}]).config(["$compileProvider","DEBUG_MODE",function(a,b){b||a.debugInfoEnabled(!1)}]).config(["$translateProvider","DEBUG_MODE","LOCALES",function(a,b,c){b&&a.useMissingTranslationHandlerLog(),a.useStaticFilesLoader({prefix:"resources/locale-",suffix:".json"}),a.preferredLanguage(c.preferredLocale),a.useLocalStorage()}]).config(["tmhDynamicLocaleProvider",function(a){a.localeLocationPattern("bower_components/angular-i18n/angular-locale_{{locale}}.js")}]),angular.module("translateApp").controller("AppCtrl",["$scope","$rootScope","$translate","$interval","VERSION_TAG",function(a,b,c,d,e){b.VERSION_TAG=e;var f="PAGE_TITLE",g="PAGE_CONTENT";c(f,g).then(function(a,c){b.pageTitle=a,b.pageContent=c}),a.locale=c.use(),b.$on("$routeChangeSuccess",function(b,c){a.currentPath=c.$$route.originalPath}),a.currentTime=Date.now(),d(function(){a.currentTime=Date.now()},1e3),b.$on("$translateChangeSuccess",function(d,e){a.locale=e.language,b.pageTitle=c.instant(f),b.pageContent=c.instant(g)})}]),angular.module("translateApp").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("translateApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("translateApp").controller("ContactsCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("translateApp").service("LocaleService",["$translate","LOCALES","$rootScope","tmhDynamicLocale",function(a,b,c,d){function e(){m.addClass(n)}function f(){m.removeClass(n)}var g=b.locales,h=Object.keys(g);h&&0!==h.length||console.error("There are no _LOCALES provided");var i=[];h.forEach(function(a){i.push(g[a])});var j=a.proposedLanguage(),k=function(a){return-1!==h.indexOf(a)},l=function(b){return k(b)?(e(),j=b,void a.use(b)):void console.error('Locale name "'+b+'" is invalid')},m=angular.element("html"),n="app-loading";return c.$on("$translateChangeSuccess",function(a,b){document.documentElement.setAttribute("lang",b.language),d.set(b.language.toLowerCase().replace(/_/g,"-"))}),c.$on("$localeChangeSuccess",function(){f()}),{getLocaleDisplayName:function(){return g[j]},setLocaleByDisplayName:function(a){l(h[i.indexOf(a)])},getLocalesDisplayNames:function(){return i}}}]),angular.module("translateApp").directive("ngTranslateLanguageSelect",["LocaleService",function(a){return{restrict:"A",replace:!0,template:'          <div class="language-select" ng-if="visible">            <label>            {{"directives.language-select.Language" | translate}}:              <select ng-model="currentLocaleDisplayName"                ng-options="localesDisplayName for localesDisplayName in localesDisplayNames"                ng-change="changeLanguage(currentLocaleDisplayName)">              </select>            </label>          </div>        ',controller:["$scope",function(b){b.currentLocaleDisplayName=a.getLocaleDisplayName(),b.localesDisplayNames=a.getLocalesDisplayNames(),b.visible=b.localesDisplayNames&&b.localesDisplayNames.length>1,b.changeLanguage=function(b){a.setLocaleByDisplayName(b)}}]}}]);